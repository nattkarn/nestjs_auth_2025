generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model User {
  id                String             @id @default(uuid())
  username          String             @unique
  email             String             @unique
  password          String
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  status            AccountStatus      @default(INACTIVE) // INACTIVE, ACTIVE, PENDING, BANNED
  activated         Boolean            @default(false)

  roleId            String
  role              Role               @relation(fields: [roleId], references: [id])
  
  verificationToken VerificationToken?
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique // e.g., "ADMIN", "USER"
  users       User[]
  permissions Permission[] @relation("RolePermissions")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  isSystem     Boolean     @default(false)
}

model Permission {
  id    String @id @default(uuid())
  name  String @unique // e.g., "user:create", "post:edit", "auth:resend-otp"
  description String?
  roles Role[] @relation("RolePermissions")
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model VerificationToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime

  @@index([token])
}

enum AccountStatus {
  ACTIVE
  INACTIVE
  PENDING
  BANNED
}
